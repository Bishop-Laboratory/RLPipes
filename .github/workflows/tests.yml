# This is a basic workflow that is manually triggered

name: Install-and-test

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Use mamba to handle conda installs in a faster way.
# mamba-version accepts a version string x.y (including "*").
# It requires you specify conda-forge as part of the channels, ideally with the highest priority.
jobs:
  install-and-test:
    name: Install and Test
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: "*"
          channels: conda-forge, bioconda, r
          channel-priority: true
          environment-file: mamba-environment.yml
          activate-environment: rseq
      - shell: bash
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - shell: bash
        name: Install RSeq and run short tests
        env:
          GHKEY: ${{ secrets.GHKEY }}
        run: |
          conda activate rseq
          conda mambabuild bioconda-recipe/ -c bioconda -c conda-forge |& tee build.log
          BINARY_PATH=$(grep -i "TEST END" build.log | awk '{ print $3 }')
          mamba install $BINARY_PATH
          RLIBPATH=$(Rscript -e "cat(.libPaths()[1])")
          Rscript -e "remotes::install_github('Bishop-Laboratory/RSeqR', auth_token='$GHKEY', dependencies=FALSE, lib='$RLIBPATH')"
          RSeqCLI
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with coverage + pytest
        run: |
          cd tests/
          bash download_test_data.sh
          python -m coverage run -m pytest
          python -m coverage report -m
