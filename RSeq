#!/bin/bash
# shellcheck source=/dev/null
helpersDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"/helpers

# Usage info
usage() {
  echo
  echo "#############################################################################################"
  echo "                   ____  _____                        ________    ____             "
  echo "                  / __ \/ ___/___  ______            / ____/ /   /  _/             "
  echo "                 / /_/ /\__ \/ _ \/ __  /  ______   / /   / /    / /               "
  echo "                / _, _/___/ /  __/ /_/ /  /_____/  / /___/ /____/ /                "
  echo "               /_/ |_|/____/\___/\__  /            \____/_____/___/                "
  echo "                                   /_/                                             "
  echo "#############################################################################################"
  echo
  echo "RSeq [-e experiment] [-c control] [-m mode] [-g genome] [-n name]"
  echo
  echo "  -e|--experiment        fq/bam/SRA    Experiment(s). Use -e1, -e2 for paired-end fq files."
  echo "  -c|--control           fq/bam/SRA    Control(s). Use -c1, -c2 for paired-end fq files."
  echo "  -m|--mode              str           Analysis mode ('DRIP', 'RChIP', etc.)"
  echo "  -g|--genome            str           UCSC genome for samples (e.g., 'hg38')"
  echo "  -n|--name              str           Sample names(s) for use in output files."
  echo "  -s|--sampleSheet       csv           CSV file describing samples (overrides -e/-c/-m/-g/-n)."
  echo "  -o|--outputDir         dir           Output directory. [default = 'RSeq_out/']"
  echo "  -G|--genomeDir         dir           Genome directory. [default = '~/.RSeq_genomes']"
  echo "  -t|--threads           int           Specify number of threads. [default = 1]"
  echo "  -r|--rseqVars          json          rseqVars.json file (above options are ignored)."
  echo "  -v|--version                         Display version info"
  echo "  -h|--help                            Display detailed usage"
  echo "  --dryRun                             Dry run of analysis pipeline."
  echo "  --keepTmp                            Keep all temporary files during workflow."
  echo "  --dag                                Generate workflow DAGs pictures."
  echo "  --force                              Force the entire workflow to re-run."
  echo "  --reason                             Print reason for each snakemake rule being run."
  echo
  echo "Examples (see detailed usage for more):"
  echo
  echo "RSeq -e treated.fastq -c untreated.fastq -m DRIP -g mm10 -n my_experiment -o RSeq_out/ -t 20"
  echo
  echo "RSeq -e1 treated_A.R1.fastq treated_B.R1.fastq -e2 treated_A.R2.fastq treated_B.R2.fastq -m R-ChIP -g dm6"
  echo

}

usageDetail() {
  # From: https://stackoverflow.com/questions/7314044/use-bash-to-read-line-by-line-and-keep-space
  IFS=''
  while read lines; do
    echo "$lines"
  done < "$helpersDir"/usage_details.txt

}

version() {
  echo
  echo "RSeq v0.9.9 (c) 2020 Bishop Laboratory"
  echo
}

# Check for usage
if [[ "$#" -eq 0 ]] ; then
    usage
    exit 0
fi

# Argparse & pre-process
echo
inputJSON=$(Rscript "$helpersDir"/process_input.R "$@" "$helpersDir")

# Check if version or usage
if [ "$inputJSON" == "usage" ]; then
  usageDetail
  exit 0
elif [ "$inputJSON" == "version" ]; then
  version
  exit 0
elif [ ! -f "$inputJSON" ]; then
  echo "$inputJSON"
  echo
  exit 1
fi

# Run the pipeline!
python "$helpersDir"/run_workflow.py "$inputJSON" "$helpersDir"/rseq_workflow.smk

echo
exit 0
