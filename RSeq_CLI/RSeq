#!/bin/bash
# shellcheck source=/dev/null
helpersDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"/helpers

# Usage info
usage() {
  echo
  echo "#############################################################################################"
  echo "                   ____  _____                        ________    ____             "
  echo "                  / __ \/ ___/___  ______            / ____/ /   /  _/             "
  echo "                 / /_/ /\__ \/ _ \/ __  /  ______   / /   / /    / /               "
  echo "                / _, _/___/ /  __/ /_/ /  /_____/  / /___/ /____/ /                "
  echo "               /_/ |_|/____/\___/\__  /            \____/_____/___/                "
  echo "                                   /_/                                             "
  echo "#############################################################################################"
  echo
  echo "RSeq [-e experiment] [-c control] [-m mode] [-g genome] [-n name]"
  echo
  echo "  -e|--experiment        fq/bam/SRA    Experiment(s). Use -e1, -e2 for paired-end fq files."
  echo "  -c|--control           fq/bam/SRA    Control(s). Use -c1, -c2 for paired-end fq files."
  echo "  -m|--mode              str           Analysis mode ('DRIP', 'RChIP', etc.)"
  echo "  -g|--genome            str           UCSC genome for samples (e.g., 'hg38')"
  echo "  -n|--name              str           Sample names(s) for use in output files."
  echo "  -s|--sampleSheet       csv           CSV file describing samples (overrides -e/-c/-m/-g/-n)."
  echo "  -o|--outputDir         dir           Output directory. [default = 'RSeq_out/']"
  echo "  -G|--genomeDir         dir           Genome directory. [default = '~/.RSeq_genomes']"
  echo "  -t|--threads           int           Specify number of threads. [default = 1]"
  echo "  -v|--version                         Display version info"
  echo "  -h|--help                            Display detailed usage"
  echo
  echo "Examples (see detailed usage for more):"
  echo
  echo "RSeq -e treated.fastq -c untreated.fastq -m DRIP -g mm10 -n my_experiment -o RSeq_out/ -t 20"
  echo
  echo "RSeq -e1 treated_A.R1.fastq treated_B.R1.fastq -e2 treated_A.R2.fastq treated_B.R2.fastq -m R-ChIP -g dm6"
  echo

}

usageDetail() {
  usage
  echo
  echo "################################################################################################################"
  echo "############################################ USAGE DETAILS #####################################################"
  echo "################################################################################################################"
  echo "sampleSheet:"
  echo
  echo "This is a required argument for RSeq. It is a CSV file containing the following columns:"
  echo
  echo "  --dryRun                             Perform a dry-run of the RSeq pipeline to ensure there are no errors."
  echo "  --noFastp                            Do not use fastp to perform adapter trimming, filtering, and fastq QC."
  echo "  --noDedupe                           Do not use clumpify.sh to perform read deduplication."
  echo "  --keepTmp                            Do not delete intermediate files once processing is finished."
  echo "experiment "
  echo
  echo "    GEO or SRA accession(s) of experimental samples to download and analyze and/or names of local "
  echo "    fastq or bam file(s). For local files, if no sample_names are provided, file prefixes will be    "
  echo "    treated as sample_names. For local files, mate pairs should be indicated as file_one.R1.fastq+file_two.R2.fastq"
  echo
  echo "control "
  echo
  echo "    control Same as experiment but for control/input samples."
  echo
  echo "sample_name "
  echo
  echo "    Name for identifying this sample. Will default to the file basename (for fastq/bam files)"
  echo "    or SRA sample name (for public data) if not given."
  echo
  echo "genome "
  echo
  echo "    The desired genome for the provided sample in UCSC format (hg38, mm10, etc). For SRA/GEO accessions, the latest"
  echo "    genome assembly for the sample species will be automatically determined if no genome is supplied."
  echo
  echo "3. 'species': with 'human' or 'mouse' as entries"
  echo "'Run': the name of each sequencing file. e.g. 'ATMsiRNA' is the Run for 'ATMsiRNA_1.fastq'"
  echo "If there are technical replicates, they will be merged using the 'Run' and 'Experiment' columns. For example:"
  echo
  echo "'Run': 'APBX2.1', 'APBX2.2', 'APBX2.3'; 'Experiment': 'APBX2', 'APBX2', 'APBX2'"
  echo "Fastq files are merged 'APBX2.1_1.fastq' + 'APBX2.2_1.fastq' + 'APBX2.3_1.fastq' -> 'APBX2_1.fastq'"
  echo
  echo "################################################################################################################"
  echo "################################################################################################################"
}

version() {
  echo
  echo "RSeq v0.9.9 (c) 2020 Bishop Laboratory"
  echo
}

# Check for usage
if [[ "$#" -eq 0 ]] ; then
    usage
    exit 0
fi

# Argparse & pre-process
echo
inputJSON=$(Rscript "$helpersDir"/process_input.R "$@" "$helpersDir")

# Check if version or usage
if [ "$inputJSON" == "usage" ]; then
  usageDetail
  exit 0
elif [ "$inputJSON" == "version" ]; then
  version
  exit 0
elif [ ! -f "$inputJSON" ]; then
  echo "$inputJSON"
  echo
  exit 1
fi

# Run the pipeline!
python "$helpersDir"/run_workflow.py "$inputJSON" "$helpersDir"/rseq_workflow.smk




