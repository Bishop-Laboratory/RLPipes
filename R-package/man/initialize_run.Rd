% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RSeqDataSet.R
\name{initialize_run}
\alias{initialize_run}
\title{Create an RSeq Data Set}
\usage{
initialize_run(
  mode = NULL,
  experiment = NULL,
  control = NULL,
  outdir = NULL,
  analysis_params = NULL,
  condition = NULL,
  replicate = NULL,
  RNH_check = TRUE,
  genome = NULL,
  genome_home_dir = file.path(path.expand("~"), ".RSeq_genomes"),
  convert_bams = TRUE,
  out_name = NULL,
  cores = NULL,
  samples = NULL,
  output_json = NULL
)
}
\arguments{
\item{mode}{Required. The \code{mode} parameter controls the workflow used to analyze data based
on best-practices for the specified R-loop mapping method. This can be overwritten
by manually passing parameters to \code{analysis_params}. Options include
\code{DRIP}, \code{DRIPc}, \code{qDRIP}, \code{ssDRIP}, \code{RDIP}, \code{R-ChIP},
\code{RR-ChIP}, and \code{MapR}. Please read the vignette for more details.}

\item{experiment}{Character cotaining the GEO or SRA accession(s) of experimental samples
to download and analyze. Can also be the file prefix or file name of local fastq or bam file(s).
Can also be a directory path containing local fastq or bam files if not using public data accessions.
If no \code{experiment} names are provided, file prefixes will be treated as \code{experiment}
names for subsequent analyses. Acceptable inputs are any combination of GEO or SRA accessions
(GSM, GSE, SRX, SRP, SRR, SRS) with any combination of file prefixes, file names, and directories.
Must be specified in \code{samples} if not provided here. See \code{details} for
more information.}

\item{control}{Same as \code{experiment} but for control/input samples.
Provide in the same order as \code{experiment} entries so that there is a 1:1 match
between each \code{experiment} sample and the corresponding control.}

\item{outdir}{Character specifying folder locations to save data to. Default is \code{'RSeq_out'}. Can
be specified in \code{samples}.}

\item{analysis_params}{Nested named list used to override default parameters. See \code{details} below.}

\item{condition}{Character specifying the biological condition of each sample (e.g., 'HeLa_WT_siCTR').
Should be provided in the same order as \code{experiment} entries so that there is a 1:1 match.
In the case of folders/studies, condition will be appended to the file prefix if provided. \code{condition} will be
used to evaluate the congruency of biological replicates. \bold{NOTE}: RNaseH experimental samples should not be included in
the same condition as experimental samples unless they are explicitely defined via \code{replicate} or \code{outname}.
In this case, they append the condition with the phase "RNH" (e.g., 'HeLa_WT_siCTR_RNH'). If this is not provided, it will be automatically
generated numerically.}

\item{replicate}{Numeric specifying the biological replicate number or sample type. '-1' identifies RNaseH1 samples which
are passed as \code{experiment} rather than control samples. This will be used in combination with \code{condition} during R-loop mapping QC analysis to
help evaluate the congruency of replicates and the specifity of mapping. If not provided, \code{RSeq} will attempt to
determine RNaseH status from the \code{outname} parameter and sample metadata (for public samples). This can
be disabled using the \code{RNH_check} parameter. A warning will
be issued if the algorithm was unable to identify an RNaseH sample.}

\item{RNH_check}{Logical. Should \code{RSeq} attempt to identify and analyze RNaseH1-treated samples for
specificity analysis? Default: TRUE.}

\item{genome}{Character specifying which genome assembly to use (e.g., "hg19", "mm9"). By default \code{RSeq} uses
the latest available pre-built genome annotations corresponding to the detected species (if using public data). If using
local data, this information must be supplied. \code{RSeq} will download and build the appropriate annotation set in
all cases where that is possible. If not possible or not desired, use \code{custom_genome}.}

\item{samples}{Data frame containing sample info and analysis parameters. See \code{details} below.}

\item{custom_genome}{Character specifying a path to the folder containing \code{bwa} indexes for the custom
genome or idices for another aligner if specified in 'analysis_params'.
If a length-two character vector, second item should specify the path to a custom gene annotation set in bed format
in which the genes are the 4th column (e.g., c("data/myo_myotis_bwa_indices/", "data/myo_myotis_genes.bed"))}

\item{outname}{Character specifying name (in the case of individual samples) or prefix (in the case of
folders/studies with multiple samples) to be used for plotting, reports, and output files. If not supplied,
\code{RSeq} will attempt to use the condition and replicate arguments (if unique) or the GEO or SRA sample
name if available and the file prefixes in the case of local files. If \code{replicate} does not indicate RNaseH}

\item{operations}{Character specifying which analysis steps should be included. Default is \code{'all'} which
includes \code{c('fastq_QC', 'alignment', 'post_alignment', 'call_peaks', 'annotate', 'rloop_QC')}. Can be specified
in \code{analysis_params}. See \code{details} below.}

\item{test_run}{Logical. If TRUE, will perform pre-flight checks and attempt all operations with a limited subset of data. Default: TRUE.}
}
\value{
An RSeq object containing \code{params}, \code{QC}, \code{report}, and \code{peaks}. See \code{details} below.
}
\description{
Creates an RSeq data object that can be processed with the RSeq pipeline
}
\details{
\bold{Note}: all arguments can be specified directly or passed via the \code{samples} object. Additionally, "RNH" is a
special phrase which should not be used in the naming of experimental samples. Finally, please run a
\code{test_run} to ensure correct parameters prior to analysis. See details below.



\subsection{Sample input parameters} {
  \code{RSeq} can be used with or without specifying a \code{samples} frame. Users will find that this file
  provides convenience for complicated analysis. Briefly, \code{samples} should be a data frame of the form
  \code{sample X parameter}. The purpose is to allow for sample to be run with its own set of unique parameters if desired.
  Parameters specified in the \code{samples} frame supersede those specified in the typical \code{RSeq} arguments.
  If columns are not provided in the \code{samples} frame but are provided in arguments to \code{RSeq}, those arguments
  will be applied added as a new column.

  Possible parameters:
  \describe{
    \item{experiment}{\strong{Required} column giving the accession names (GSM, GSE, SRX, SRS, SRR, SRP),
    file prefixes, bam files, fastq files, or file folders signifying samples or samples collections to analyze. When study accessions (GSE or SRP) are
    specified, then all the samples in that study will be downloaded and anlyzed. \code{RSeq} will not attempt to
    distinguish between R-loop-mapping samples and other sample types in that accession. It will assign sample names to
    the available GSM or SRX accession. Likewise, if a folder directory is specified, \code{RSeq} will blindly process
    all the fastq and/or bam files in that folder regardless of type. It will also assign sample names as the file prefix
    of the files in that folder. When individual bam or fastq files are specified, their sample names will be identified as the
    file prefix. Any combination of accessions, folders, prefixes, and individual files may be specified. It is worthwhile to perform
    a \code{test_run} to verify appropriate naming prior to analysis.
    }
    \item{control}{Column giving the sample accession(s) (GSM,  SRX, SRS, SRR), file prefixes, bam files, or fastq files
    which signify the control sample (e.g., genomic input) for the corresponding experimental sample. \bold{Note}: it is NOT
    possible to specify a file folder or study accession as a control sample. This is because control samples need to be unique
    samples which specifically correspond to experimental samples. \bold{However}: it IS possible to specify one control sample
    for a folder or study accession (e.g., SRS199908 is the control sample for SRP208881). In that case, the control sample
    will be individually applied to every sample in the folder/study and will be removed from the list of 'experimental' samples.
    This is particularly convenient in cases where a single genomic input sample was produced for an entire study.
    }
    \item{condition}{specifies the biological condition of each sample. This is not required but will significantly improve the quality
    of QC analysis. \code{RSeq} will use condition information to assess replicate congruity and mapping specifity}
    \item{replicate}{specifies the biological replicate within each condition. '-1' specifies an RNaseH-treated sample which
    can be used for specificity analysis. Assigning replicates is only possible for individual samples. For studies/folders,
    \code{RSeq} will attempt to determine RNaseH status from the \code{outname} argument and sample metadata (if available).}
    \item{outname} {Specifies the name used for each sample in output files, reports, and plotting. In the case of single samples, provide
    an output name directly. For folders or study accessions, a prefix and be supplied. If condition and replicate are supplied and are unique in combination
    then they will constitue the \code{outname} unless explicitely specified here. In attempting to determine RNaseH status, \code{RSeq} will
    check the outname parameter for the phrase 'RNH' if these samples are not specified otherwise.}
    \item{RNH_check} {Logical specifying whether \code{RSeq} should check for RNaseH samples.}
    \item{outdir} { Character specifying folder locations to save data to. Default is \code{'RSeq_out'}. Can
    be specified in \code{samples}}
  }

}

\subsection{Customizing the RSeq pipeline}{
  To offer flexibility, the \code{RSeq} pipeline allows users to fully control the workflow parameters.
  This can be done simply by specifying \code{operations} and \code{analysis_params}

  \strong{operations}:

  The default pipeline for each \code{mode} follows the same pattern:
  \describe{
    \item{fastq_QC}{Fastq reads are trimmed and filtered. Performed using \code{fastp} by default, which also provides an HTML report of read quality.}
    \item{alignment}{Alignment of reads to genome. Uses \code{bwa mem} with default parameters for alignment. The output is piped to \code{samtools}
    for conversion to bam format and duplicate removal, sorting, and indexing.}
    \item{post_alignment}{Calculation of alignment metrics, alignment specifity,
    and sample-sample correlation. Uses \code{samtools} for alignment metrics. Then,
    \code{deepTools} is used to construct a bin matrix and calculate alignment coverage/specificity,
     sample-sample correlation, principal component analysis, fragment size distribution. \code{deepTools}
     will also be used to calculate peak pileup around the gene body and R-loop forming sequences and
     to generate a bigWig coverage track using RPKM as the signal value in 10bp bins.}
    \item{call_peaks}{Calculates R-loop peaks using \code{macs2} with the --broad flag by default. If single-end,
    fragment size is estimated before peak calling, using macs2 default params}
    \item{annotate}{Annotate peaks with respect to genomic features (e.g., promoters) and genes. Uses \code{ChIPpeakAnno} for
    calculating gene annotations and \code{ChIPseeker} for calculating genomic feature overlap}
    \item{rloop_QC}{Based on best practices, this step involves calculating a range of quality metrics and assigning
    a score based on the outcome of those assessments. For additional details, please see the vignette.}
  }


  \strong{analysis_params}:

  Nested list for describing alterations to the default pipeline.
  List


}
}
\examples{
genesOfInterest <- c("ATM", "SLC7A11")
correlationAnalyzeR::analyzeSingleGenes(genesOfInterest = genesOfInterest,
                              returnDataOnly = TRUE,
                              GSEA_Type = "simple",
                              Sample_Type = c("normal", "cancer"),
                              Tissue = c("respiratory", "pancreas"))

genesOfInterest <- c("BRCA1")
correlationAnalyzeR::analyzeSingleGenes(genesOfInterest = genesOfInterest,
                              GSEA_Type = "simple", returnDataOnly = TRUE,
                              crossCompareMode = TRUE,
                              whichCompareGroups = "normal")

}
