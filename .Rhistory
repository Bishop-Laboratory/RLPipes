filename = "heatmap_all.png")
pheatmap(corSample, show_rownames = T, show_colnames = F, height = 18, width = 20, annotation_row = annoNow,
filename = "heatmap_all.png")
pheatmap(corSample, show_rownames = TRUE, show_colnames = TRUE, height = 17, width = 20, annotation_col = annoNow,
filename = "heatmap_all.png")
pheatmap(corSample, show_rownames = TRUE, show_colnames = TRUE, height = 80, width = 20, annotation_col = annoNow,
filename = "heatmap_all.png")
pheatmap(corSample, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = annoNow,
filename = "heatmap_all.png")
mat
dim(mat)
colData <- rmap_samples %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "sample_name") %>%
select(mode, Group, Condition)
all(rownames(annoNow) == colnames(mat))
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
colData <- rmap_samples %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "sample_name") %>%
select(mode)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
sample_cols <- sample(colnames(mat), size = 80)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 50)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "sample_name") %>%
select(mode)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
all(rownames(annoNow) == sample_cols)
pheatmap(corSample, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = annoNow,
filename = "heatmap_all.png")
sample_cols <- sample(colnames(mat), size = 50)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "sample_name") %>%
select(mode)
all(rownames(colData) == colnames(mat))
corSamples <- cor(mat)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = annoNow,
filename = "heatmap_all.png")
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = colData,
filename = "heatmap_all.png")
colnames(rmap_samples)
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, " - ", Condition, " (", GSM, ")")) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "sample_name") %>%
select(mode)
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Condition, "_", GSM, "_", Group)) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colData
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Group, "_", Condition, "_", GSM)) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
mat[1:10, 1:10\]
mat[1:10, 1:10]
all(rownames(colData) == colnames(mat))
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Group, "_", Condition, "_", GSM)) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
colData
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 50)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Group, "_", Condition, "_", GSM)) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
all(rownames(annoNow) == sample_cols)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = colData,
filename = "heatmap_all.png")
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
colData
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 50)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colData
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = colData,
filename = "heatmap_all.png")
set.seed(42)
sample_cols <- sample(colnames(mat), size = 100)
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 100)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = colData,
filename = "heatmap_all.png")
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_" Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 100)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
colData
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = colData,
filename = "heatmap_all.png")
sample_cols <- sample(colnames(mat), size = 120)
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 120)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 20, width = 20, annotation_col = colData,
filename = "heatmap_all.png")
set.seed(42)
sample_cols <- sample(colnames(mat), size = 150)
mat <- mat[,sample_cols]
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 150)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 25, width = 25, annotation_col = colData,
filename = "heatmap_all.png")
sample_cols <- sample(colnames(mat), size = 290)
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 290)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 40, width = 40, annotation_col = colData,
filename = "heatmap_all.png")
sample_cols <- sample(colnames(mat), size = 120)
mat <- mat[,sample_cols]
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
sample_cols <- sample(colnames(mat), size = 120)
mat <- mat[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
corSamples <- cor(mat)
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 40, width = 40, annotation_col = colData,
filename = "heatmap_all.png")
# annoNow <- rmap_samples %>%
#   filter(sample_name %in% sample_cols) %>%
#   arrange(match(sample_name, sample_cols)) %>%
#   column_to_rownames(var = "sample_name") %>%
#   select(mode, Group, Condition)
pheatmap(corSamples, show_rownames = TRUE, show_colnames = TRUE, height = 21, width = 21, annotation_col = colData,
filename = "heatmap_all.png")
sample_cols <- sample(colnames(corSamples), size = 120)
corSamples <- cor(mat)
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
corSamples <- cor(mat)
sample_cols <- sample(colnames(corSamples), size = 120)
sample_cols <- sample_cols[,sample_cols]
corSamples <- corSamples[,sample_cols]
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(corSamples)) %>%
arrange(match(sample_name, colnames(corSamples))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(corSamples) <- rownames(colData)
all(rownames(colData) == colnames(corSamples))
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
library(pheatmap)
set.seed(42)
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
prcomp(mat)
pres <- prcomp(mat)
pres$x
ggscatter(pres$x, x = "PC1", y = "PC2")
library(ggpubr)
ggscatter(pres$x, x = "PC1", y = "PC2")
ggscatter(as.data.frame(pres$x), x = "PC1", y = "PC2")
as.data.frame(pres$x)
dev.off()
pres$rotation
ggscatter(as.data.frame(pres$rotation), x = "PC1", y = "PC2")
colMeans(corSamples)
hist(colMeans(corSamples))
meanss <- colMeans(corSamples)
meanss <- meanss[order(meanss)]
meanss
?pheatmap
mat <- read_tsv("RSeq_CLI/analysis/all_epic_tiles_hg38_1kb_bins_summary.tab")
head(mat)
# Correlation module
# 1. Gold standard genes with 1kb windows
# bedtools intersect -a RSeq_CLI/analysis/1kb_tiles_hg38.bed -b RSeq_CLI/analysis/correlation_genes_100kb.hg38.bed > /RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed
# 2. Get all of the coverage across the gold-standard genes with 1kb windows
# multiBigwigSummary BED-file --BED RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed -o res.npz -b RSeq_CLI/tests/RSeq_out16/*/coverage_unstranded/*hg38.bw --outRawCounts RSeq_CLI/analysis/gold_standard_bw_coverage.tab -p 80
# 3. Do the correlation analysis in R
covSum <- read_tsv("../helpers/data/gold_standard_bw_coverage.tab")
# Correlation module
# 1. Gold standard genes with 1kb windows
# bedtools intersect -a RSeq_CLI/analysis/1kb_tiles_hg38.bed -b RSeq_CLI/analysis/correlation_genes_100kb.hg38.bed > /RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed
# 2. Get all of the coverage across the gold-standard genes with 1kb windows
# multiBigwigSummary BED-file --BED RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed -o res.npz -b RSeq_CLI/tests/RSeq_out16/*/coverage_unstranded/*hg38.bw --outRawCounts RSeq_CLI/analysis/gold_standard_bw_coverage.tab -p 80
# 3. Do the correlation analysis in R
covSum <- read_tsv("RSeq_CLI/helpers/data/gold_standard_bw_coverage.tab")
# Correlation module
# 1. Gold standard genes with 1kb windows
# bedtools intersect -a RSeq_CLI/analysis/1kb_tiles_hg38.bed -b RSeq_CLI/analysis/correlation_genes_100kb.hg38.bed > /RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed
# 2. Get all of the coverage across the gold-standard genes with 1kb windows
# multiBigwigSummary BED-file --BED RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed -o res.npz -b RSeq_CLI/tests/RSeq_out16/*/coverage_unstranded/*hg38.bw --outRawCounts RSeq_CLI/analysis/gold_standard_bw_coverage.tab -p 80
# 3. Do the correlation analysis in R
covSum <- read_tsv("RSeq_CLI/analysis/gold_standard_bw_coverage.tab")
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
dim(mat)
library(pheatmap)
set.seed(42)
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colData
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
samples <- sample(colnames(mat), 40)
matsmall <- mat[, samples]
matsmall <- mat[, samples]
colSmall <- colData[samples,]
corSmall <- cor(matsmall)
pheatmap(corSmall, show_rownames = TRUE, show_colnames = TRUE, height = 18, width = 18,
annotation_col = colSmall,
filename = "heatmap_small.png")
colSmall
colSmall <- colData[samples,, drop = FALSE]
pheatmap(corSmall, show_rownames = TRUE, show_colnames = TRUE, height = 18, width = 18,
annotation_col = colSmall,
filename = "heatmap_small.png")
pheatmap(corSmall, show_rownames = TRUE, show_colnames = TRUE, height = 18, width = 18,
annotation_col = colSmall,
filename = "RSeq_CLI/analysis/heatmap_small.png")
# Correlation module
# 1. Gold standard genes with 1kb windows
# bedtools intersect -a RSeq_CLI/analysis/1kb_tiles_hg38.bed -b RSeq_CLI/analysis/correlation_genes_100kb.hg38.bed > /RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed
# 2. Get all of the coverage across the gold-standard genes with 1kb windows
# multiBigwigSummary BED-file --BED RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed -o res.npz -b RSeq_CLI/tests/RSeq_out16/*/coverage_unstranded/*hg38.bw --outRawCounts RSeq_CLI/analysis/gold_standard_bw_coverage.tab -p 80
# 3. Do the correlation analysis in R
covSum <- read_tsv("RSeq_CLI/analysis/gold_standard_bw_coverage.tab")
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
rownames(mat)
# Correlation module
# 1. Gold standard genes with 1kb windows
# bedtools intersect -a RSeq_CLI/analysis/1kb_tiles_hg38.bed -b RSeq_CLI/analysis/correlation_genes_100kb.hg38.bed > /RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed
# 2. Get all of the coverage across the gold-standard genes with 1kb windows
# multiBigwigSummary BED-file --BED RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed -o res.npz -b RSeq_CLI/tests/RSeq_out16/*/coverage_unstranded/*hg38.bw --outRawCounts RSeq_CLI/analysis/gold_standard_bw_coverage.tab -p 80
# 3. Do the correlation analysis in R
covSum <- read_tsv("RSeq_CLI/analysis/gold_standard_bw_coverage.tab")
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
rownames(mat) <- paste0(covSum[,1], "_", covSum[,2], covSum[,3])
mat <- as.matrix(covSum %>%
select(-1, -2, -3))
colnames(mat) <- gsub(colnames(mat), pattern = "'([ES]RX[0-9]+_.+).hg38.bw'", replacement = "\\1")
covSum[,1]
paste0(covSum[,1], "_", covSum[,2], covSum[,3])
colnames(covSum)
covSum[,1]
covSum[,1, drop = TRUE]
rownames(mat) <- paste0(covSum[,1, drop = TRUE], "_", covSum[,2, drop = TRUE], "_", covSum[,3, drop = TRUE])
rownames(mat)
library(pheatmap)
set.seed(42)
colData <- rmap_samples %>%
mutate(newname = paste0(mode, "_", Cell, "_", Group, "_", Condition, "_", gsub(sample_name, pattern = "([ES]RX[0-9]+)_.+", replacement = "\\1"))) %>%
filter(sample_name %in% colnames(mat)) %>%
arrange(match(sample_name, colnames(mat))) %>%
column_to_rownames(var = "newname") %>%
select(mode)
colnames(mat) <- rownames(colData)
all(rownames(colData) == colnames(mat))
mat[1:10, 1:10]
save(mat, colData, file = "RSeq_CLI/helpers/data/gold_standard_bw_coverage.rda")
# Correlation module
# 1. Gold standard genes with 1kb windows
# bedtools intersect -a RSeq_CLI/analysis/1kb_tiles_hg38.bed -b RSeq_CLI/analysis/correlation_genes_100kb.hg38.bed > /RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed
# 2. Get all of the coverage across the gold-standard genes with 1kb windows
# multiBigwigSummary BED-file --BED RSeq_CLI/analysis/correlation_genes_100kb.hg38.1kbwindow.bed -o res.npz -b RSeq_CLI/tests/RSeq_out16/*/coverage_unstranded/*hg38.bw --outRawCounts RSeq_CLI/analysis/gold_standard_bw_coverage.tab -p 80
# 3. Do the correlation analysis in R
covSum <- read_tsv("RSeq_CLI/analysis/gold_standard_bw_coverage.tab")
install.packages(c("knitr", "rmarkdown"))
install.packages('heatmaply')
knitr::opts_chunk$set(echo = TRUE)
library(heatmaply)
knitr::opts_chunk$set(echo = TRUE)
library(heatmaply)
pheatmap(corSmall, show_rownames = TRUE, show_colnames = TRUE, height = 18, width = 18,
annotation_col = colSmall)
?heatmaply
heatmaply_cor(corSmall)
heatmaply(corSmall)
heatmaply_cor(
cor(mtcars),
xlab = "Features",
ylab = "Features",
k_col = 2,
k_row = 2
)
heatmaply_cor(
cor(mtcars),
xlab = "Features",
ylab = "Features",
k_col = 2,
k_row = 2
)
